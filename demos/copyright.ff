$BLOCK NULL

   This defines a parcel with the text for a common license it in,
   and then shows it being used to create WRITE statements to display
   the license from a running program, and expanding the same parcel as
   Fortran comments so it can easily be included in multiple locations
   in the file.

$BLOCK 
$!==============================================================================
$PARCEL MIT
MIT License

Copyright (c) 2019 urbanjost

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

A few derivitive or redistributed files in this collection may contain
additional licensing information. Check the code or associated documents
for further information.
$PARCEL
$!==============================================================================
program testit
use,intrinsic :: iso_fortran_env, only : stderr=>error_unit, &
                                         stdin=>input_unit, &
                                         stdout=>output_unit
call a()
call b()
contains
subroutine a()
$BLOCK COMMENT
$POST MIT
$BLOCK
   write(*,*)'subroutine a'
end subroutine a

subroutine b()
integer,parameter :: io=stdout
   write(*,*)'subroutine b'
$BLOCK WRITE
$POST MIT
$BLOCK
end subroutine b

end program testit
